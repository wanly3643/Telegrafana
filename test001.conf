[agent]
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname=true

[[inputs.mqtt_consumer]]
  ## MQTT broker URLs to be used. The format should be scheme://host:port,
  ## schema can be tcp, ssl, or ws.
  servers = ["tcp://10.0.0.11:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "ZHLT"
  ]

  ## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  topic_tag = ""

  ## QoS policy for messages
  ##   0 = at most once
  ##   1 = at least once
  ##   2 = exactly once
  ##
  ## When using a QoS of 1 or 2, you should enable persistent_session to allow
  ## resuming unacknowledged messages.
  qos = 1

  ## Connection timeout for initial connection in seconds
  # connection_timeout = "30s"

  ## Maximum messages to read from the broker that have not been written by an
  ## output.  For best throughput set based on the number of metrics within
  ## each message and the size of the output's metric_batch_size.
  ##
  ## For example, if each message from the queue contains 10 metrics and the
  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
  ## full batch is collected and the write is triggered immediately without
  ## waiting until the next flush_interval.
  # max_undelivered_messages = 1000

  ## Persistent session disables clearing of the client session on connection.
  ## In order for this option to work you must also set client_id to identify
  ## the client.  To receive messages that arrived while the client is offline,
  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
  ## publishing.
  # persistent_session = false

  ## If unset, a random client ID will be generated.
  # client_id = ""

  ## Username and password to connect MQTT server.
  username = "honuser"
  password = "HON123well"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
  tag_keys = []
  name_override = "params"
  json_string_fields=[
    "10FIE260201.DACA.PV",
    "10TICF260200.DACA.PV",
    "10AIT260209.DACA.PV",
    "10AIP260300.DACA.PV",
    "KYZFYSJCKYLA.DACA.PV",
    "VOC"
  ]
  json_time_key = "time"
  # json_time_format = "2006-1-2 15:4:5.999999"
  json_time_format = "01/02/06 15:04:05"
  json_timezone = "Local"

[[processors.converter]]
  ## Tags to convert
  ##
  ## The table key determines the target type, and the array of key-values
  ## select the keys to convert.  The array may contain globs.
  ##   <target-type> = [<tag-key>...]
  [processors.converter.tags]
    string = []
    integer = []
    unsigned = []
    boolean = []
    float = []

  ## Fields to convert
  ##
  ## The table key determines the target type, and the array of key-values
  ## select the keys to convert.  The array may contain globs.
  ##   <target-type> = [<field-key>...]
  [processors.converter.fields]
    tag = []
    string = ["VOC"]
    integer = []
    unsigned = []
    boolean = []
    float = [
      "10FIE260201.DACA.PV",
      "10TICF260200.DACA.PV",
      "10AIT260209.DACA.PV",
      "10AIP260300.DACA.PV",
      "KYZFYSJCKYLA.DACA.PV"
    ]

[[processors.rename]]
  [[processors.rename.replace]]
    field = "VOC"
    dest = "voc"

  [[processors.rename.replace]]
    field = "10AIP260300.DACA.PV"
    dest = "p2603"

  [[processors.rename.replace]]
    field = "10TICF260200.DACA.PV"
    dest = "temp"

  [[processors.rename.replace]]
    field = "10FIE260201.DACA.PV"
    dest = "cycle"

  [[processors.rename.replace]]
    field = "10AIT260209.DACA.PV"
    dest = "gas"

  [[processors.rename.replace]]
    field = "KYZFYSJCKYLA.DACA.PV"
    dest = "btp"

# Configuration for sending metrics to MQTT
[[outputs.mqtt]]
  ## URLs of mqtt brokers
  servers = ["10.0.0.11:1883"]

  ## topic for producer messages
  topic_prefix = "test"

  ## QoS policy for messages
  ##   0 = at most once
  ##   1 = at least once
  ##   2 = exactly once
  qos = 1

  ## username and password to connect MQTT server.
  username = "honuser"
  password = "HON123well"

  ## client ID, if not set a random ID is generated
  client_id = "sinochem-params-aggr-test"

  ## Timeout for write operations. default: 5s
  # timeout = "5s"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## When true, metrics will be sent in one MQTT message per flush.  Otherwise,
  ## metrics are written one metric per MQTT message.
  # batch = false

  ## When true, messages will have RETAIN flag set.
  retain = false

  ## Data format to output.
  data_format = "json"
